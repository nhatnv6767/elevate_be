plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.avast.gradle.docker-compose' version '0.16.12'
}

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
    startedServices = ['postgres', 'redis', 'zookeeper', 'kafka']
    isRequiredBy(tasks.bootRun)

    // Configure Docker remote connection
    environment.put 'DOCKER_HOST', 'tcp://192.168.1.128:2375'

    // Health check configuration
    waitForTcpPorts = true

    // Scale configuration
    scale = [
            postgres : 1,
            redis    : 1,
            zookeeper: 1,
            kafka    : 1
    ]

    // Add environment variables
    environment.put 'DOCKER_TLS_VERIFY', '0'
    environment.put 'COMPOSE_PROJECT_NAME', 'elevate-banking'

    // Configure timeout through environment
    environment.put 'COMPOSE_HTTP_TIMEOUT', '300'

    removeVolumes = false
    removeOrphans = true

    captureContainersOutput = true

}

// add task to check docker connection
task checkDockerConnection {
    doLast {
        def process = "curl http://192.168.1.128:2375/version".execute()
        println "Docker connection check result: ${process.text}"
    }
}

// Run check connection before start
tasks.bootRun.dependsOn checkDockerConnection

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

ext {
    jjwtVersion = '0.11.5'
    mapstructVersion = '1.5.5.Final'
    lombokVersion = '1.18.30'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'org.springframework.kafka:spring-kafka'
    // https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
    // implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.3.0'
    implementation 'org.springframework.kafka:spring-kafka'


    implementation 'org.testcontainers:testcontainers:1.19.6'

    // For Zookeeper connection check
    implementation 'org.apache.curator:curator-framework:5.1.0'
    implementation 'org.apache.curator:curator-recipes:5.1.0'

    // For Kafka connection check
//    implementation 'org.apache.kafka:kafka-clients'
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '3.9.0'


    // Database
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.postgresql:postgresql:42.7.4'

    // DevTools
    implementation 'org.springframework.boot:spring-boot-devtools'

    // JWT
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // Tools
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'com.h2database:h2'

    // OpenAPI 3 Dependencies
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.3.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

    // Swagger Annotations
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
    implementation 'io.swagger.core.v3:swagger-models:2.2.20'

    // Optional but recommended for better API docs
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    // Docker Java Client
    implementation platform('com.github.docker-java:docker-java-bom:3.3.4')
    implementation 'com.github.docker-java:docker-java-core'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5'
    // https://mvnrepository.com/artifact/com.github.docker-java/docker-java
    implementation group: 'com.github.docker-java', name: 'docker-java', version: '3.4.0'


    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.3'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.2.3'
    implementation 'org.apache.httpcomponents.core5:httpcore5-h2:5.2.3'

    // Add JAXB API
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    // ThÃªm Jakarta XML Binding API
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'

    // Jackson JAXB annotations
    implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations'


    implementation 'org.hibernate.tool:hibernate-tools-orm:6.4.1.Final'
    implementation 'org.hibernate.tool:hibernate-tools-utils:6.4.1.Final'
    implementation group: 'org.hibernate', name: 'hibernate-tools', version: '5.6.15.Final'


    // https://mvnrepository.com/artifact/io.github.cdimascio/dotenv-java
    implementation group: 'io.github.cdimascio', name: 'dotenv-java', version: '3.0.0'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
    // implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: '3.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'jakarta.mail:jakarta.mail-api:2.1.3'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.4.0'


    // https://mvnrepository.com/artifact/jakarta.mail/jakarta.mail-api
    implementation 'jakarta.mail:jakarta.mail-api:2.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-mail'


}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

test {
    useJUnitPlatform()
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

springBoot {
    buildInfo()
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}
