spring.application.name=ElevateBanking
# Database Configuration
spring.datasource.url=jdbc:postgresql://192.168.1.128:5432/elevate_banking
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
## Redis Configuration
spring.data.redis.host=192.168.1.128
spring.data.redis.port=6379
## Kafka Configuration
spring.kafka.bootstrap-servers=192.168.1.128:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=elevate-banking-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.elevatebanking.event
app.security.admin.username=admin
app.security.admin.password=123456
app.security.admin.roles=USER
# Docker Configuration
app.docker.enabled=true
# Swagger UI custom path
springdoc.swagger-ui.path=/swagger-ui.html
# API docs endpoint path
springdoc.api-docs.path=/api-docs
# Enable or disable API docs
springdoc.api-docs.enabled=true
# Enable or disable Swagger UI
springdoc.swagger-ui.enabled=true
# Sort API paths alphabetically
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.doc-expansion=none
# Apply try-it-out feature by default
springdoc.swagger-ui.tryItOutEnabled=true
# Disable schema examples in API docs
springdoc.writer-with-default-pretty-printer=true
# Show actuator endpoints in API docs
springdoc.show-actuator=true
# Cache control
springdoc.cache.disabled=false
# Groups configuration
springdoc.group-configs[0].group=auth
springdoc.group-configs[0].paths-to-match=/api/v1/auth/**
springdoc.group-configs[1].group=accounts
springdoc.group-configs[1].paths-to-match=/api/v1/accounts/**
springdoc.group-configs[2].group=transactions
springdoc.group-configs[2].paths-to-match=/api/v1/transactions/**
# Timeout settings
# Database Connection Pool
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
# Timeout settings
spring.datasource.hikari.socket-timeout=60000
# ThÃªm SSL config
spring.datasource.hikari.data-source-properties.ssl=false
spring.datasource.hikari.data-source-properties.sslmode=disable
spring.datasource.hikari.initialization-fail-timeout=0
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.keepalive-time=30000
spring.datasource.hikari.leak-detection-threshold=60000
# Docker Configuration
docker.host=tcp://192.168.1.128:2375
docker.api.version=1.41
docker.connection.timeout=30000
docker.response.timeout=45000
# Wait for PostgreSQL to be ready
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.default_schema=public
# Initialization delay
spring.data.jpa.repositories.bootstrap-mode=deferred

